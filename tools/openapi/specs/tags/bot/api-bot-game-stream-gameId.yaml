get:
  operationId: botGameStream
  summary: Stream Bot game state
  description: |
    Stream the state of a game being played with the Bot API, as [ndjson](#section/Introduction/Streaming-with-ND-JSON).
    Use this endpoint to get updates about the game in real-time, with a single request.
    Each line is a JSON object containing a `type` field. Possible values are:
    - `gameFull` Full game data. All values are immutable, except for the `state` field.
    - `gameState` Current state of the game. Immutable values not included.
    - `chatLine` Chat message sent by a user (or the bot itself) in the `room` "player" or "spectator".
    - `opponentGone` Whether the opponent has left the game, and how long before you can claim a win or draw.
    The first line is always of type `gameFull`.
  tags:
    - Bot
  security:
    - OAuth2: ["bot:play"]
  parameters:
    - in: path
      name: gameId
      schema:
        type: string
        example: "5IrD6Gzz"
      required: true
  responses:
    "200":
      description: The stream of the bot game.
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
            default: "'*'"
      content:
        application/x-ndjson:
          schema:
            oneOf:
              - $ref: "../../schemas/GameFullEvent.yaml"
              - $ref: "../../schemas/GameStateEvent.yaml"
              - $ref: "../../schemas/ChatLineEvent.yaml"
              - $ref: "../../schemas/OpponentGoneEvent.yaml"
    "404":
      description: The bot game was not found.
      content:
        application/json:
          schema:
            $ref: "../../schemas/NotFound.yaml"
